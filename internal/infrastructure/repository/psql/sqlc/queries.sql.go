// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: queries.sql

package sqlc

import (
	"context"
)

const getUserByID = `-- name: GetUserByID :one
SELECT id, telegram_id, is_blocked, is_subscribed_to_broadcasting, created_at, updated_at
FROM users
WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.TelegramID,
		&i.IsBlocked,
		&i.IsSubscribedToBroadcasting,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUserByTelegramID = `-- name: GetUserByTelegramID :one
SELECT id, telegram_id, is_blocked, is_subscribed_to_broadcasting, created_at, updated_at
FROM users
WHERE telegram_id = $1
`

func (q *Queries) GetUserByTelegramID(ctx context.Context, telegramID int64) (User, error) {
	row := q.db.QueryRow(ctx, getUserByTelegramID, telegramID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.TelegramID,
		&i.IsBlocked,
		&i.IsSubscribedToBroadcasting,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
